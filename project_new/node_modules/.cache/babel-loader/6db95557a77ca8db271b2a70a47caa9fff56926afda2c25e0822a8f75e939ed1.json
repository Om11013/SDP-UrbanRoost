{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Om\\\\project\\\\src\\\\components\\\\TypedText.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useTypewriter = (text, speed) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setDisplayText(prevText => prevText + text[index]);\n      setIndex(prevIndex => prevIndex + 1);\n    }, speed);\n    return () => clearInterval(timer);\n  }, [text, speed, index]);\n  return displayText;\n};\n_s(useTypewriter, \"fhW3DAm/sADxP63rmyL7ZscbJ6U=\");\nconst TypedText = ({\n  strings,\n  speed = 100,\n  delay = 1000,\n  loop = true,\n  className = ''\n}) => {\n  _s2();\n  const [currentString, setCurrentString] = useState(0);\n  const text = strings[currentString];\n  const displayText = useTypewriter(text, speed);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (displayText.length === text.length) {\n        clearInterval(interval);\n        setTimeout(() => {\n          setCurrentString(prev => loop ? (prev + 1) % strings.length : prev);\n        }, delay);\n      }\n    }, speed);\n    return () => clearInterval(interval);\n  }, [displayText, text, strings, speed, delay, loop]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: displayText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s2(TypedText, \"2eeLNLsepydsBOAbM+lHW3xHIGQ=\", false, function () {\n  return [useTypewriter];\n});\n_c = TypedText;\nexport default TypedText;\nvar _c;\n$RefreshReg$(_c, \"TypedText\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","useTypewriter","text","speed","_s","displayText","setDisplayText","index","setIndex","timer","setInterval","prevText","prevIndex","clearInterval","TypedText","strings","delay","loop","className","_s2","currentString","setCurrentString","interval","length","setTimeout","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Om/project/src/components/TypedText.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst useTypewriter = (text, speed) => {\r\n  const [displayText, setDisplayText] = useState('');\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setDisplayText((prevText) => prevText + text[index]);\r\n      setIndex((prevIndex) => prevIndex + 1);\r\n    }, speed);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [text, speed, index]);\r\n\r\n  return displayText;\r\n};\r\n\r\nconst TypedText = ({ strings, speed = 100, delay = 1000, loop = true, className = '' }) => {\r\n  const [currentString, setCurrentString] = useState(0);\r\n  const text = strings[currentString];\r\n\r\n  const displayText = useTypewriter(text, speed);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (displayText.length === text.length) {\r\n        clearInterval(interval);\r\n        setTimeout(() => {\r\n          setCurrentString((prev) => (loop ? (prev + 1) % strings.length : prev));\r\n        }, delay);\r\n      }\r\n    }, speed);\r\n    return () => clearInterval(interval);\r\n  }, [displayText, text, strings, speed, delay, loop]);\r\n\r\n  return <span className={className}>{displayText}</span>;\r\n};\r\n\r\nexport default TypedText;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BJ,cAAc,CAAEK,QAAQ,IAAKA,QAAQ,GAAGT,IAAI,CAACK,KAAK,CAAC,CAAC;MACpDC,QAAQ,CAAEI,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACxC,CAAC,EAAET,KAAK,CAAC;IAET,OAAO,MAAMU,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,CAACP,IAAI,EAAEC,KAAK,EAAEI,KAAK,CAAC,CAAC;EAExB,OAAOF,WAAW;AACpB,CAAC;AAACD,EAAA,CAdIH,aAAa;AAgBnB,MAAMa,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAEZ,KAAK,GAAG,GAAG;EAAEa,KAAK,GAAG,IAAI;EAAEC,IAAI,GAAG,IAAI;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAAAC,GAAA;EACzF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAMI,IAAI,GAAGa,OAAO,CAACK,aAAa,CAAC;EAEnC,MAAMf,WAAW,GAAGJ,aAAa,CAACC,IAAI,EAAEC,KAAK,CAAC;EAE9CN,SAAS,CAAC,MAAM;IACd,MAAMyB,QAAQ,GAAGZ,WAAW,CAAC,MAAM;MACjC,IAAIL,WAAW,CAACkB,MAAM,KAAKrB,IAAI,CAACqB,MAAM,EAAE;QACtCV,aAAa,CAACS,QAAQ,CAAC;QACvBE,UAAU,CAAC,MAAM;UACfH,gBAAgB,CAAEI,IAAI,IAAMR,IAAI,GAAG,CAACQ,IAAI,GAAG,CAAC,IAAIV,OAAO,CAACQ,MAAM,GAAGE,IAAK,CAAC;QACzE,CAAC,EAAET,KAAK,CAAC;MACX;IACF,CAAC,EAAEb,KAAK,CAAC;IACT,OAAO,MAAMU,aAAa,CAACS,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACjB,WAAW,EAAEH,IAAI,EAAEa,OAAO,EAAEZ,KAAK,EAAEa,KAAK,EAAEC,IAAI,CAAC,CAAC;EAEpD,oBAAOjB,OAAA;IAAMkB,SAAS,EAAEA,SAAU;IAAAQ,QAAA,EAAErB;EAAW;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AACzD,CAAC;AAACX,GAAA,CAnBIL,SAAS;EAAA,QAIOb,aAAa;AAAA;AAAA8B,EAAA,GAJ7BjB,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}